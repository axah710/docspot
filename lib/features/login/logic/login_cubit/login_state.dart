import 'package:freezed_annotation/freezed_annotation.dart';
part "login_state.freezed.dart";

@freezed
//This annotation indicates that the following class should be processed by
//the freezed package to generate the necessary code for immutable data classes
// and union types.
class LoginState with _$LoginState {
  // This defines a LoginState class that uses the _$LoginState mixin.
  // The mixin _$LoginState will be generated by the freezed package and will
  // contain the necessary methods and properties for the LoginState class.
  const factory LoginState.initial() = _Initial;
  // This defines a factory constructor for the LoginState class named initial.
  // It creates an instance of the private class _Initial.
  const factory LoginState.loading() = Loading;
  // This defines a factory constructor for the LoginState class named loading.
  // It creates an instance of the class Loading.
  const factory LoginState.success(data) = Success;
  // This defines a factory constructor for the LoginState class named success.
  // It creates an instance of the class Success and takes a parameter data.
  //The data parameter can be of any type, and it will be stored in the
  // Success class.
  const factory LoginState.failure({required String error}) = Failure;
  // This defines a factory constructor for the LoginState class named failure.
  // It creates an instance of the class Failure and takes a named parameter
  //error of type String, which is required. The error parameter will be
  //stored in the Failure class.
}
